
CFLAGS = -Wall -fpic -coverage -lm -std=c99

rngs.o: rngs.h rngs.c
	gcc -c rngs.c -g  $(CFLAGS)

dominion.o: dominion.h dominion.c rngs.o
	gcc -c dominion.c -g  $(CFLAGS)

playdom: dominion.o playdom.c
	gcc -o playdom playdom.c -g dominion.o rngs.o $(CFLAGS)
#To run playdom you need to entere: ./playdom <any integer number> like ./playdom 10*/
testDrawCard: testDrawCard.c dominion.o rngs.o
	gcc  -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

badTestDrawCard: badTestDrawCard.c dominion.o rngs.o
	gcc -o badTestDrawCard -g  badTestDrawCard.c dominion.o rngs.o $(CFLAGS)

testBuyCard: testDrawCard.c dominion.o rngs.o
	gcc -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

testAll: dominion.o testSuite.c
	gcc -o testSuite testSuite.c -g  dominion.o rngs.o $(CFLAGS)

interface.o: interface.h interface.c
	gcc -c interface.c -g  $(CFLAGS)

runtests: testDrawCard 
	./testDrawCard &> unittestresult.out
	gcov dominion.c >> unittestresult.out
	cat dominion.c.gcov >> unittestresult.out

player: player.c interface.o
	gcc -o player player.c -g  dominion.o rngs.o interface.o $(CFLAGS)

all: playdom player 

cardtest1: cardtest1.c dominion.o interface.o rngs.o
	gcc -o cardtest1 cardtest1.c -g dominion.o interface.o rngs.o $(CFLAGS)

cardtest2: cardtest2.c dominion.o interface.o rngs.o
	gcc -o cardtest2 cardtest2.c -g dominion.o interface.o rngs.o $(CFLAGS)

cardtest3: cardtest3.c dominion.o interface.o rngs.o
	gcc -o cardtest3 cardtest3.c -g dominion.o interface.o rngs.o $(CFLAGS)

cardtest4: cardtest4.c dominion.o interface.o rngs.o
	gcc -o cardtest4 cardtest4.c -g dominion.o interface.o rngs.o $(CFLAGS)

unittest1: unittest1.c dominion.o interface.o rngs.o
	gcc -o unittest1 unittest1.c -g dominion.o interface.o rngs.o $(CFLAGS)

unittest2: unittest2.c dominion.o interface.o rngs.o
	gcc -o unittest2 unittest2.c -g dominion.o interface.o rngs.o $(CFLAGS)

unittest3: unittest3.c dominion.o interface.o rngs.o
	gcc -o unittest3 unittest3.c -g dominion.o interface.o rngs.o $(CFLAGS)

unittest4: unittest4.c dominion.o interface.o rngs.o
	gcc -o unittest4 unittest4.c -g dominion.o interface.o rngs.o $(CFLAGS)

randomadventurercard: randomadventurercard.c dominion.o interface.o rngs.o
	#gcc -fprofile-arcs -ftest-coverage -Wall -std=c99 dominion.c randomtestadventurer.c rngs.c -o randomtestadventurer -lm -g
	gcc -o randomadventurercard randomadventurercard.c -g dominion.o interface.o rngs.o $(CFLAGS)
randomcardtest1:randomcardtest1.c dominion.o interface.o rngs.o
	gcc -o randomcardtest1 randomcardtest1.c -g dominion.o interface.o rngs.o $(CFLAGS)
randomcardtest2: randomcardtest2.c dominion.o interface.o rngs.o
	gcc -o randomcardtest2 randomcardtest2.c -g dominion.o interface.o rngs.o $(CFLAGS)


randomtestcard: randomadventurercard randomcardtest1 randomcardtest2
	echo "Random tests:" > randomtestresults.out
	echo "randomadventurercard" >> randomtestresults.out
	randomadventurercard >> randomtestresults.out
	echo "randomadventurercard" >> randomtestresults.out
	randomadventurercard >> randomtestresults.out
	echo "randomadventurercard" >> randomtestresults.out
	randomadventurercard >> randomtestresults.out

	gcov dominion.c -b >> randomtestresults.out
	cat dominion.c.gcov >> randomtestresults.out

unittestresults: unittest1 unittest2 unittest3 unittest4 cardtest1 cardtest2 cardtest3 cardtest4
	echo "Result  dominion unit tests:" > unittestresults.out
	
	echo "unittest1.c:" >> unittestresults.out
	##gcc -o unittest1 rngs.c dominion.c unittest1.c $(CFLAGS)
	unittest1 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 
	
	echo "unittest2.c:" >> unittestresults.out
	#gcc -o unittest2 rngs.c dominion.c unittest2.c $(CFLAGS)
	unittest2 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	echo "unittest3.c:" >> unittestresults.out
	#gcc -o unittest3 rngs.c dominion.c unittest3.c $(CFLAGS)
	unittest3 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 
	
	echo "unittest4.c:" >> unittestresults.out
	#gcc -o unittest4 rngs.c dominion.c unittest4.c $(CFLAGS)
	unittest4 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	echo "cardtest1.c:" >> unittestresults.out
	#gcc -o cardtest1 rngs.c dominion.c cardtest1.c $(CFLAGS)
	cardtest1 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	echo "cardtest2.c:" >> unittestresults.out
	#gcc -o cardtest2 rngs.c dominion.c cardtest2.c $(CFLAGS)
	cardtest2 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	echo "cardtest3.c:" >> unittestresults.out
	#gcc -o cardtest3 rngs.c dominion.c cardtest3.c $(CFLAGS)
	cardtest3 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	echo "cardtest4.c:" >> unittestresults.out
	#gcc -o cardtest4 rngs.c dominion.c cardtest4.c $(CFLAGS)
	cardtest4 >> unittestresults.out
	#gcov dominion.c -b >> unittestresults.out
	#cat dominion.c.#gcov >> unittestresults.out 

	gcov dominion.c -b >> unittestresults.out
	cat dominion.c.gcov >> unittestresults.out 

clean:
	rm -f *.o playdom.exe playdom player player.exe  *.gcov *.gcda *.gcno *.so *.out testDrawCard testDrawCard.exe unittestresults.out unittest1 unittest2 unittest3 unittest4 cardtest1 cardtest2 cardtest3 cardtest4 randomtestadventurer randomcardtest1 randomcardtest2 randomtestresults.out *.gcda *.gcno *.gcov
